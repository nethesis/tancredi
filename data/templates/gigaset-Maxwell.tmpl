<?xml version="1.0" encoding="UTF-8"?>
{% import 'gigaset.macros' as gigaset %}
{% import 'language.macros' as l10n %}
{% autoescape %}
<provisioning version="1.1">
{% if firmware_file matches '/(\\d+\\.\\d+\\.\\d+)/' %}
  <firmware>
    <file version="{{ firmware_file | preg_replace('/^.+(\\d+\\.\\d+\\.\\d+).+$/', '$1') }}" url="{{ "#{provisioning_url_scheme}://#{hostname}/#{provisioning_url_path}#{tok2}/firmware/#{firmware_file}" }}" />
  </firmware>
{% endif %}
  <nvm>
    <param name="WebUI.AdminPassword" value="{{ adminpw | default('admin') }}" />
    <param name="WebUI.UserPassword" value="{{ userpw | default('1234') }}" />
    
    <param name="System.DateAndTime.AutoAdjustTime" value="{{ ntp_server ? 'NTPServiceEnabled' : 'NTPServiceDHCP' }}" />
    <param name="System.DateAndTime.TimeServer" value="{{ ntp_server ?? 'pool.ntp.org' }}" />
    <param name="System.DateAndTime.TimeZone" value="{{ gigaset.timezone_map(timezone) }}" />
    <param name="System.DateAndTime.AutoAdjustClockForDST" value="AutomatedDaylightSavingEnabled" />
    <param name="System.DateAndTime.TimeFormat" value="{{ time_format == '12' ? '12h' : '24h' }}" />
    <param name="System.DateAndTime.DateOrder" value="{{ gigaset.date_format(date_format) }}" />

    <param name="Telephony.ToneScheme" value="{{ gigaset.tones_code(tonezone) }}" />
    <param name="Telephony.CallTransfer.HoldOnTransfer.Attended" value="{{ dss_transfer != 'attended' ? 'Disabled' : 'Enabled' }}" />
    <param name="Telephony.CallTransfer.HoldOnTransfer.Unattended" value="{{ dss_transfer == 'attended' ? 'Disabled' : 'Enabled' }}" />
    <param name="PhoneUI.Settings.Language" value="{{ gigaset.language_code(language) }}" />
    <param name="WebUI.Language" value="{{ gigaset.language_code(language) }}" />
    
    <param name="FirmwareManagment.AutomaticCheckForUpdates" value="{{ firmware_file ? '1' : '0' }}" />
    <param name="System.Provision.Period" value="{{ provisioning_complete ? '0' : '600' }}" />
    <param name="System.Provision.ProvisioningServer" value="{{ provisioning_url2 | replace({'%25': '%'}) }}" />

    <param name="SIP.Port" value="{{ account_encryption_1 ? sip_tls_port : sip_udp_port }}" />
    <param name="SIP.RTP.Port" value="5004"  />
    <param name="SIP.Security.UseSIPS" value="{{ account_encryption_1 ? '2' : '0' }}" />
    <param name="SIP.TransportProtocol" value="{{ account_encryption_1 ? '2' : '1' }}" />
    <param name="SIP.Security.SRTP" value="{{ account_encryption_1 ? '1' : '0' }}" />
    <param name="SIP.Security.AcceptNonSRTPCalls" value="{{ account_encryption_1 ? '0' : '1' }}" />
    <param name="SIP.PRACK" value="0" />

    <param name="SIP.DefaultAccount" value="0" />

    {% for line in range(1,4) -%}
    {%- if _context['account_username_' ~ line] is defined -%}
    {%- set idx = line - 1 -%}
    <param name="SIP.Account.{{ idx }}.AccountName" value="{{ _context['account_username_' ~ line] }}" />
    <param name="SIP.Account.{{ idx }}.Active" value="1" />
    <param name="SIP.Account.{{ idx }}.Provider" value="{{ _context['account_username_' ~ line] }}" />
    <param name="SIP.Account.{{ idx }}.AuthName" value="{{ _context['account_username_' ~ line] }}" />
    <param name="SIP.Account.{{ idx }}.AuthPassword" value="{{ _context['account_password_' ~ line] }}" />
    <param name="SIP.Account.{{ idx }}.DisplayName" value="{{ _context['account_display_name_' ~ line] }}" />
    <param name="SIP.Account.{{ idx }}.Username" value="{{ _context['account_username_' ~ line] }}" />
    <param name="SIP.Account.{{ idx }}.Domain" value="{{ hostname }}" />
    <param name="SIP.Account.{{ idx }}.ProxyServer.Address" value="{{ hostname }}" />
    <param name="SIP.Account.{{ idx }}.ProxyServer.Port" value="{{ _context['account_encryption_' ~ line] ? sip_tls_port : sip_udp_port }}" />
    <param name="SIP.Account.{{ idx }}.RegistrationServer.Address" value="{{ hostname }}" />
    <param name="SIP.Account.{{ idx }}.RegistrationServer.Port" value="{{ _context['account_encryption_' ~ line] ? sip_tls_port : sip_udp_port }}" />
    <param name="SIP.Account.{{ idx }}.DTMFTransmission" value="{{ gigaset.dtmf_map(_context['account_dtmf_type_' ~ line]) }}" />
    <param name="SIP.Account.{{ idx }}.FailoverServer.Enabled" value="0" />
    <param name="SIP.Account.{{ idx }}.STUN.Enabled" value="0" />
    {%- endif %}
    {%- endfor %}

    {# LDAP #}
    <param name="NetDir.LDAP.0.DirectoryName" value="{{ l10n.gettext('Phonebook', language) }}"/>
    <param name="NetDir.LDAP.0.Enable" value="1"/>
    <param name="NetDir.LDAP.0.Lookup" value="0"/>
    <param name="NetDir.LDAP.0.Server.Address" value="{{ ldap_server | default(hostname) }}"/>
    <param name="NetDir.LDAP.0.Server.Port" value="{{ ldap_port | default( ldap_tls == 'ldaps' ? '636' : '389' ) }}"/>
    <param name="NetDir.LDAP.0.BaseDN" value="{{ ldap_base }}"/>
    <param name="NetDir.LDAP.0.Security" value="
{%- if ldap_tls == 'starttls' %}
    {{- '1' -}}
{% elseif ldap_tls == 'ldaps' %}
    {{- '2' -}}
{% else %}
    {{- '0' -}}
{% endif -%}
"/>
    <param name="NetDir.LDAP.0.Uername" value="{{ ldap_user }}"/>
    <param name="NetDir.LDAP.0.Password" value="{{ ldap_password }}"/>
    <param name="NetDir.LDAP.0.NameFilter" value="{{ ldap_name_filter }}"/>
    <param name="NetDir.LDAP.0.NumberFilter" value="{{ ldap_number_filter }}"/>
    <param name="NetDir.LDAP.0.DisplayFormat" value="{{ ldap_name_display }}"/>
    <param name="NetDir.LDAP.0.MaxNumberOfSearchResults" value="50"/>
    <param name="NetDir.LDAP.0.FirstName" value="{{ ldap_name_attr | split(' ')[0] | default('') }}"/>
    <param name="NetDir.LDAP.0.Surname" value="{{ ldap_name_attr | split(' ')[1] | default('') }}"/>
    <param name="NetDir.LDAP.0.PhoneHome" value="{{ ldap_mainphone_number_attr }}"/>
    <param name="NetDir.LDAP.0.PhoneOffice" value="{{ ldap_otherphone_number_attr }}"/>
    <param name="NetDir.LDAP.0.PhoneMobile" value="{{ ldap_mobilephone_number_attr }}"/>
    {# soft keys #}
    {% if cap_softkey_count > 0 %}
      {% for number in 1..(cap_softkey_count) %}
        {% if _context['softkey_type_' ~ number] is defined %}
          {{ gigaset.softkey_type_map(_context['softkey_type_' ~ number], (number-1)) }}
        {% endif %}
      {% endfor %}
    {% endif %}
    {# end soft keys #}
    {# line keys #}
    {% if cap_linekey_count > 0 %}
      {% for number in 1..(cap_linekey_count) %}
        {% if _context['linekey_type_' ~ number] is defined %}
          {{ gigaset.linekey_type_map(_context['linekey_type_' ~ number], (number-1), _context['linekey_value_' ~ number], dndtoggle, pickup_group, queuetoggle) }}
        {% else %}
            <param name="PhoneUI.Keys.FunctionKeys.{{number-1}}.Type" value="-1" />
        {% endif %}
        <param name="PhoneUI.Keys.FunctionKeys.{{number-1}}.DisplayName" value="{{_context['linekey_label_' ~ number]}}" />
      {% endfor %}
    {% endif %}
    <param name="Telephony.ShowKeysDisplayName" value="1"/>
    <param name="PhoneUI.Keys.FunctionKeys.Icons" value="1"/>
    <param name="PhoneUI.Keys.FunctionKeys.Indicator" value="1"/>
  </nvm>
  <custom>
    <step type="UnlockAllFunctionKeys" />
  </custom>
  {# end line keys #}
</provisioning>
{% endautoescape %}
